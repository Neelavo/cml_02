# -*- coding: utf-8 -*-
"""BestFitLine.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uZh96LU0Ob-K9dTrAkmpgQfZQDwpCSRH
"""

import numpy as np
import matplotlib.pyplot as plt
import random

x=np.linspace(1,100,30,endpoint=False)
print(x)

y=np.zeros(30,dtype=float)
for i in range(30):
  y[i]=random.randrange(2,4)*x[i] + random.randrange(-1,1)*10 + 50

print(y)

plt.scatter(x,y)

m=7
b=100
z=m*x
z=z+b
plt.plot(x,z,color='red')

def cost(p):
  c=0
  for i in range(30):
    c+=(y[i]-p[i])*(y[i]-p[i])

  return c

print(cost(z))

def update(m,b,lr,lr2):
  #old implementation
  #grad=0
  #gradb=0
  #for i in range(30):
    #grad+=(y[i]-m*x[i]-b)*-1*x[i]
    #gradb+=-(y[i]-m*x[i]-b)

  grad=np.sum(np.dot(-1*(x.T),y-(m*x + b)))
  gradb=np.sum(-1*(y-(m*x + b)))

  M=m-grad*lr
  B=b-gradb*lr2
  return M,B

print(update(5,100,0.000001,0.0001))

m=-2
b=-200
z=m*x
z=z+b
for i in range(300):
  if i%10==0:
    print(cost(z))
  m,b=update(m,b,0.000001,0.001)
  z=m*x
  z=z+b

print(m,b)

plt.plot(x,z,color='green')
plt.scatter(x,y)